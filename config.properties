# Whether or not pre-calculate all the frames before play
# Note that pre-calculating can take a while
# "true"  : pre-load, pre-process everything before playback. Will hog quite an amount of RAM (~500M+ for Bad Apple)
# "false" : stream frames from the disk and process them on the fly
bPreloadFrames=false

# Set "true" to record the pre-loading to a binary file.
# This option overrides any playback mode.
# filename for the recorded file will be generated accordingly to the framesDir, font settings, etc.
# default: false
bIsRecordMode=false

# Fill in the option to play from the recording.
# This option overrides any playback mode.
# extension: .aarec
# if "bIsRecordMode=true" and this option is specified, the application will quit with error (superposition!)
# default: (blank)
sRecordFileName=

# Framerate of the video you provided.
# It will also limit the FPS of the application
# valid range: 0 - 255
# default: 60
iVideoFramerate=60

# Play video from series of images.
# default: Bad_Apple
sFramesDir=Bad_Apple
# default: ba
sFramesPrefix=ba

# supported formats: OGG, MOD, XM
# default: Touhou_bad_apple_feat_nomico.ogg
sAudioFileName=Touhou_bad_apple_feat_nomico.ogg

# different font can have different effect on the video,
# default: CGA.png/milky.png - 8x8, MDA.png - 9x14, terminal.png - 8x16
sFontFamilyName=CGA.png
sFontSize=8x8

# Note: Bad Apple footage has aspect ratio of 16:9
# default-SVGA    : 132x74 for CGA.png, 132x48 for MDA.png, 132x37 for terminal.png
# default-oldskool: 76x43 for EGA (CGA.png), 69x25 for MDA (MDA.png)
sTerminalSize=132x74

# Monitor color type, if you want more RETRO
# 0: White (LCD white)
# 1: Green (P39 phosphor -- IBM 5151)
# 2: Amber (P3 phosphor)
# 3: custom colour given in "sCustomFilterColour"
# You can also change the filter by using F1-F4 on the player
# default: 0
iMonitorType=0
# usage: <r,g,b> like 0,239,255
sCustomFilterColour=0,239,255

# Use only single colour
# if b16Tones and bSingleCol are both true, the application will quit with error (superposition!)
# default: false
bSingleTone=false
# mark as true and the demo will use 16 shades of grey
# MDA font can't utilise this feature; you'll have to extend the font family by yourself
#   to use the feature with MDA.
# Note: No known oldskool computers are capable of display text mode in this fashion.
# default: false
b16Tones=false

# Use full 255 characters
# Note that since we can't really change the background, it won't look like the "8088 Corruption".
# Use with "iAsciiAlgo=2" for better quality.
# default: false
bFullCodePage=false

# Gamma function for luminosity calculation
# it's here just for the proof that the demo can gamma-correct. Just leave the knob alone.
# default: 220
iGamma=220

# dither image to increase quality and decrease framerate
# 0: No dither        --FASTEST
# 1: Floyd-Steinberg
# 2: Sierra lite      --FASTEST dithering
# 3: Sierra-2
# test dithering with sTestDisplayImage=gradient.png
# default: 1
iDitherAlgo=1

# Faster machine might need higher value. (not tested)
# Using too low value will make pre-calculation needlessly too long
# If the progress display lags, it's a sign that you hit the limit of your processing power.
# Even if you did, however, it doesn't hurt as long as the display on the Window title is all good.
# If unsure, just leave it to the default: 41
iPreCalcRate=41

# specify image to display the image instead of video
# this option overrides any video load
sTestDisplayImage=

# Luminosity calculation mode
# 0: quick and dirty  (3R + 4G + B) / 8
# 1: precise and slow  sqrt(0.299 * R^2 + 0.587 * G^2 + 0.114 * B^2)
# default: 0
iColourMode=0

# Display credit at the end of the play
# I know, it's sort of, meh. Just set it false so you wouldn't see it.
# default: false
bDemoCredit=true

# Forces the renderer to make exact calculation
# Will drop the performance significantly
# default: false
bNoApproximate=false

# Explicitly set the limitation of search depth
# Lower value: less accurate, faster
# Higher value: more accurate, slower
# If you don't know about the algorithm used, just don't touch,
# program will automatically choose best balanced value
# default: auto
iRenderAcuracy=auto

# Multithreaded rendering
# If you're computer is single-threaded, the option will have no effect
# The performance of the rendering may be bound to the I/O speed. In other words, this only reasonably
# works with NVMe SSDs.
# default: false
bMultithread=false

# Antialiasing algorithms -- advanced
# 1 -- SubGlyph4  (2x2)
# 2 -- SubGlyph9  (3x3)
# 3 -- SubGlyph16 (4x4)
# 4 -- SubGlyph25 (5x5)
# 5 -- SubGlyph64 (8x8)
# 0 -- None
#iAsciiAlgo=1
